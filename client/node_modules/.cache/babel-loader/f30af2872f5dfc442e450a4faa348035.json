{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\youtube_project\\\\client\\\\src\\\\components\\\\App.js\";\nimport React, { Suspense } from 'react'; // 로딩이 끝날 때까지 기다리는 동안 임시 UI를 렌더링 하는 컴포넌트\n\nimport { Route, Switch } from \"react-router-dom\"; // 렌더링할 컴포넌트를 선택하는 라우팅\n\nimport Auth from \"../hoc/auth\"; //Auth = React에서 인증  담당 / 사용자 인증 정보를 확인하여 접근 권한을 제어\n// 페이지 컴포넌트들\n\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\";\nimport UploadVideoPage from './views/UploadVideoPage/UploadVideoPage.js';\nimport DetailVideoPage from './views/DetailVideoPage/DetailVideoPage.js';\nimport SubscriptionPage from './views/SubscriptionPage/SubscriptionPage.js';\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 26\n      }\n    }, \"Loading...\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: '75px',\n      minHeight: 'calc(100vh - 80px)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Auth(LandingPage, null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }), \" \", /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: Auth(LoginPage, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }), \" \", /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/register\",\n    component: Auth(RegisterPage, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }), \" \", /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/video/upload\",\n    component: Auth(UploadVideoPage, true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), \" \", /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/video/:videoId\",\n    component: Auth(DetailVideoPage, null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), \" \", /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/subscription\",\n    component: Auth(SubscriptionPage, true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), \" \")), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/user/Desktop/youtube_project/client/src/components/App.js"],"names":["React","Suspense","Route","Switch","Auth","LandingPage","LoginPage","RegisterPage","NavBar","Footer","UploadVideoPage","DetailVideoPage","SubscriptionPage","App","paddingTop","minHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAAyC;;AACzC,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B,C,CAAkD;;AAClD,OAAOC,IAAP,MAAiB,aAAjB,C,CAAgC;AAEhC;;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,eAAP,MAA4B,4CAA5B;AACA,OAAOC,eAAP,MAA4B,4CAA5B;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;;AAGA,SAASC,GAAT,GAAe;AACb,sBACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,eAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,SAAS,EAAE;AAAjC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEX,IAAI,CAACC,WAAD,EAAc,IAAd,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,oBAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAED,IAAI,CAACE,SAAD,EAAY,KAAZ,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,oBAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEF,IAAI,CAACG,YAAD,EAAe,KAAf,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,oBAIE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,eAAlB;AAAkC,IAAA,SAAS,EAAEH,IAAI,CAACM,eAAD,EAAkB,IAAlB,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,oBAKE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,iBAAlB;AAAoC,IAAA,SAAS,EAAEN,IAAI,CAACO,eAAD,EAAkB,IAAlB,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,oBAME,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,eAAlB;AAAkC,IAAA,SAAS,EAAEP,IAAI,CAACQ,gBAAD,EAAmB,IAAnB,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,MADF,CAFF,eAYE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD;;AAED,eAAeC,GAAf","sourcesContent":["import React, { Suspense } from 'react'; // 로딩이 끝날 때까지 기다리는 동안 임시 UI를 렌더링 하는 컴포넌트\r\nimport { Route, Switch } from \"react-router-dom\"; // 렌더링할 컴포넌트를 선택하는 라우팅\r\nimport Auth from \"../hoc/auth\"; //Auth = React에서 인증  담당 / 사용자 인증 정보를 확인하여 접근 권한을 제어\r\n\r\n// 페이지 컴포넌트들\r\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\r\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\r\nimport NavBar from \"./views/NavBar/NavBar\";\r\nimport Footer from \"./views/Footer/Footer\"\r\nimport UploadVideoPage from './views/UploadVideoPage/UploadVideoPage.js';\r\nimport DetailVideoPage from './views/DetailVideoPage/DetailVideoPage.js'\r\nimport SubscriptionPage from './views/SubscriptionPage/SubscriptionPage.js'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={(<div>Loading...</div>)}> {/* fallback = 로딩 중임을 나타내는 UI를 지정하는 속성*/}\r\n      <NavBar />\r\n      <div style={{ paddingTop: '75px', minHeight: 'calc(100vh - 80px)' }}>\r\n        <Switch> {/* 컴포넌트를 그룹화하고 그 중 하나만 렌더링 */}\r\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} /> {/* null = 로그인 관계없이 이동 */}\r\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} /> {/* false = 로그인 되어있으면 이동 */}\r\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} /> {/* false = 로그인 안되어있으면 이동 */}\r\n          <Route exact path=\"/video/upload\" component={Auth(UploadVideoPage, true)} /> {/* true = 로그인 해야만 이동  */}      \r\n          <Route exact path=\"/video/:videoId\" component={Auth(DetailVideoPage, null)} /> {/* null = 로그인 관계없이 이동 */}      \r\n          <Route exact path=\"/subscription\" component={Auth(SubscriptionPage, true)} /> {/* true =로그인 해야만 이동 */} \r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}