{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\youtube_project\\\\client\\\\src\\\\components\\\\views\\\\DetailVideoPage\\\\Sections\\\\SingleComment.js\";\nimport React, { useState } from 'react';\nimport { Comment, Avatar, Button, Input } from 'antd';\nimport Axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport LikeDislikes from './LikeDislikes';\nconst {\n  TextArea\n} = Input;\n\nfunction SingleComment(props) {\n  const user = useSelector(state => state.user);\n  const [CommentValue, setCommentValue] = useState(\"\");\n  const [OpenReply, setOpenReply] = useState(false);\n\n  const handleChange = e => {\n    setCommentValue(e.currentTarget.value);\n  };\n\n  const openReply = () => {\n    setOpenReply(!OpenReply);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const variables = {\n      writer: user.userData._id,\n      postId: props.postId,\n      responseTo: props.comment._id,\n      content: CommentValue\n    };\n    Axios.post('/api/comment/saveComment', variables).then(response => {\n      if (response.data.success) {\n        setCommentValue(\"\");\n        setOpenReply(!OpenReply);\n        props.refreshFunction(response.data.result);\n      } else {\n        alert('댓글 저장에 실패 했습니다.');\n      }\n    });\n  };\n\n  const actions = [/*#__PURE__*/React.createElement(LikeDislikes, {\n    comment: true,\n    commentId: props.comment._id,\n    userId: localStorage.getItem('userId'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: openReply,\n    key: \"comment-basic-reply-to\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"\\uB2F5\\uAE00\\uC4F0\\uAE30 \")];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Comment, {\n    actions: actions,\n    author: props.comment.writer.name,\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: props.comment.writer.image,\n      alt: \"image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, props.comment.content),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), OpenReply && /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      display: 'flex'\n    },\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    style: {\n      width: '100%',\n      borderRadius: '5px'\n    },\n    onChange: handleChange,\n    value: CommentValue,\n    placeholder: \"\\uB2F5\\uAE00\\uC744 \\uC791\\uC131 \\uD574\\uC8FC\\uC138\\uC694\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: '20%',\n      height: '52px'\n    },\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"\\uB2F5\\uAE00 \\uB2EC\\uAE30\")));\n}\n\nexport default SingleComment;","map":{"version":3,"sources":["C:/Users/user/Desktop/youtube_project/client/src/components/views/DetailVideoPage/Sections/SingleComment.js"],"names":["React","useState","Comment","Avatar","Button","Input","Axios","useSelector","LikeDislikes","TextArea","SingleComment","props","user","state","CommentValue","setCommentValue","OpenReply","setOpenReply","handleChange","e","currentTarget","value","openReply","onSubmit","preventDefault","variables","writer","userData","_id","postId","responseTo","comment","content","post","then","response","data","success","refreshFunction","result","alert","actions","localStorage","getItem","name","image","display","width","borderRadius","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,KAAlC,QAA+C,MAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAGA,MAAM;AAAEC,EAAAA;AAAF,IAAeJ,KAArB;;AACA,SAASK,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,QAAMC,IAAI,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMiB,YAAY,GAAIC,CAAD,IAAO;AACxBJ,IAAAA,eAAe,CAACI,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAf;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACpBL,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAFD;;AAIA,QAAMO,QAAQ,GAAIJ,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACK,cAAF;AAEA,UAAMC,SAAS,GAAG;AACdC,MAAAA,MAAM,EAAEd,IAAI,CAACe,QAAL,CAAcC,GADR;AAEdC,MAAAA,MAAM,EAAElB,KAAK,CAACkB,MAFA;AAGdC,MAAAA,UAAU,EAAEnB,KAAK,CAACoB,OAAN,CAAcH,GAHZ;AAIdI,MAAAA,OAAO,EAAElB;AAJK,KAAlB;AAQAR,IAAAA,KAAK,CAAC2B,IAAN,CAAW,0BAAX,EAAuCR,SAAvC,EACKS,IADL,CACUC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACvBtB,QAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,QAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACAL,QAAAA,KAAK,CAAC2B,eAAN,CAAsBH,QAAQ,CAACC,IAAT,CAAcG,MAApC;AACH,OAJD,MAIO;AACHC,QAAAA,KAAK,CAAC,iBAAD,CAAL;AACH;AACJ,KATL;AAUH,GArBD;;AAuBA,QAAMC,OAAO,GAAG,cACZ,oBAAC,YAAD;AAAc,IAAA,OAAO,MAArB;AAAsB,IAAA,SAAS,EAAE9B,KAAK,CAACoB,OAAN,CAAcH,GAA/C;AAAoD,IAAA,MAAM,EAAEc,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,eAEZ;AAAM,IAAA,OAAO,EAAErB,SAAf;AAA0B,IAAA,GAAG,EAAC,wBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFY,CAAhB;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AACI,IAAA,OAAO,EAAEmB,OADb;AAEI,IAAA,MAAM,EAAE9B,KAAK,CAACoB,OAAN,CAAcL,MAAd,CAAqBkB,IAFjC;AAGI,IAAA,MAAM,eACF,oBAAC,MAAD;AACI,MAAA,GAAG,EAAEjC,KAAK,CAACoB,OAAN,CAAcL,MAAd,CAAqBmB,KAD9B;AAEI,MAAA,GAAG,EAAC,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR;AASI,IAAA,OAAO,eACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKlC,KAAK,CAACoB,OAAN,CAAcC,OADnB,CAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAkBKhB,SAAS,iBACN;AAAM,IAAA,KAAK,EAAE;AAAE8B,MAAAA,OAAO,EAAE;AAAX,KAAb;AAAkC,IAAA,QAAQ,EAAEvB,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAE;AAAEwB,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,YAAY,EAAE;AAA/B,KADX;AAEI,IAAA,QAAQ,EAAE9B,YAFd;AAGI,IAAA,KAAK,EAAEJ,YAHX;AAII,IAAA,WAAW,EAAC,0DAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAQI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEiC,MAAAA,KAAK,EAAE,KAAT;AAAgBE,MAAAA,MAAM,EAAE;AAAxB,KAAf;AAAiD,IAAA,OAAO,EAAE1B,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCARJ,CAnBR,CADJ;AAkCH;;AAED,eAAeb,aAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { Comment, Avatar, Button, Input } from 'antd';\r\nimport Axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport LikeDislikes from './LikeDislikes';\r\n\r\n\r\nconst { TextArea } = Input;\r\nfunction SingleComment(props) {\r\n    const user = useSelector(state => state.user);\r\n    const [CommentValue, setCommentValue] = useState(\"\")\r\n    const [OpenReply, setOpenReply] = useState(false)\r\n\r\n    const handleChange = (e) => {\r\n        setCommentValue(e.currentTarget.value)\r\n    }\r\n\r\n    const openReply = () => {\r\n        setOpenReply(!OpenReply)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const variables = {\r\n            writer: user.userData._id,\r\n            postId: props.postId,\r\n            responseTo: props.comment._id,\r\n            content: CommentValue\r\n        }\r\n\r\n\r\n        Axios.post('/api/comment/saveComment', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setCommentValue(\"\")\r\n                    setOpenReply(!OpenReply)\r\n                    props.refreshFunction(response.data.result)\r\n                } else {\r\n                    alert('댓글 저장에 실패 했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n    const actions = [\r\n        <LikeDislikes comment commentId={props.comment._id} userId={localStorage.getItem('userId')} />,\r\n        <span onClick={openReply} key=\"comment-basic-reply-to\">답글쓰기 </span>\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <Comment\r\n                actions={actions}\r\n                author={props.comment.writer.name}\r\n                avatar={\r\n                    <Avatar\r\n                        src={props.comment.writer.image}\r\n                        alt=\"image\"\r\n                    />\r\n                }\r\n                content={\r\n                    <p>\r\n                        {props.comment.content}\r\n                    </p>\r\n                }\r\n            ></Comment>\r\n\r\n\r\n            {OpenReply &&\r\n                <form style={{ display: 'flex' }} onSubmit={onSubmit}>\r\n                    <TextArea\r\n                        style={{ width: '100%', borderRadius: '5px' }}\r\n                        onChange={handleChange}\r\n                        value={CommentValue}\r\n                        placeholder=\"답글을 작성 해주세요\"\r\n                    />\r\n                    <br />\r\n                    <Button style={{ width: '20%', height: '52px' }} onClick={onSubmit}>답글 달기</Button>\r\n                </form>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComment\r\n"]},"metadata":{},"sourceType":"module"}