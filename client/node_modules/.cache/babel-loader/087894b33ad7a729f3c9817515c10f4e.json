{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\youtube_project\\\\client\\\\src\\\\components\\\\views\\\\LandingPage\\\\LandingPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { FaCode } from \"react-icons/fa\";\nimport { Card, Avatar, Col, Typography, Row } from 'antd';\nimport axios from 'axios';\nimport moment from 'moment';\nconst {\n  Title\n} = Typography;\nconst {\n  Meta\n} = Card;\n\nfunction LandingPage() {\n  const [Videos, setVideos] = useState([]); //비디오 정보 배열에 저장\n\n  useEffect(() => {\n    //몽고DB에서 DOM이 로드 되자마자 실행\n    axios.get('/api/video/getVideos') //db에서 비디오정보 가져오기 = axios 라이브러리를 사용하여 비동기 GET 요청\n    .then(response => {\n      //요청에대한 응답\n      if (response.data.success) {\n        //성공시\n        console.log(response.data.videos);\n        setVideos(response.data.videos); // Videos 상태 변수를 videos 속성 값으로 업데이트\n      } else {\n        //실패시\n        alert('비디오 가져오기를 실패했습니다');\n      }\n    });\n  }, []); //[] =  배열을 useEffect의 두 번째 인자로 전달함으로써 DOM실행됬을때 한번만 실행 \n\n  const renderCards = Videos.map((video, index) => {\n    // map형식으로 \n    var minutes = Math.floor(video.duration / 60); //video.duration(러닝타임)/60 = 분\n\n    var seconds = Math.floor(video.duration - minutes * 60); //minutes/60 = 초\n\n    return /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 8,\n      xs: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: `/video/${video._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: '100%'\n      },\n      alt: \"thumbnail\",\n      src: `http://localhost:5000/${video.thumbnail}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" duration\" //러닝타임\n      ,\n      style: {\n        bottom: 0,\n        right: 0,\n        position: 'absolute',\n        margin: '4px',\n        color: '#fff',\n        backgroundColor: 'rgba(17, 17, 17, 0.8)',\n        opacity: 0.8,\n        padding: '2px 4px',\n        borderRadius: '2px',\n        letterSpacing: '0.5px',\n        fontSize: '12px',\n        fontWeight: '500',\n        lineHeight: '12px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, minutes, \" : \", seconds)))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Meta, {\n      avatar:\n      /*#__PURE__*/\n      //유저 이미지\n      React.createElement(Avatar, {\n        src: video.writer.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }),\n      title: video.title //비디오 제목\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, video.writer.name, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 46\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: '3rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \" \", video.views), \"  \", \"- \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, \" \", moment(video.createdAt).format(\"YYYY.mm.DD\"), \" \"));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '85%',\n      margin: '3rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \" \\uCD94\\uCC9C \\uB3D9\\uC601\\uC0C1 \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, renderCards));\n}\n\nexport default LandingPage;","map":{"version":3,"sources":["C:/Users/user/Desktop/youtube_project/client/src/components/views/LandingPage/LandingPage.js"],"names":["React","useEffect","useState","FaCode","Card","Avatar","Col","Typography","Row","axios","moment","Title","Meta","LandingPage","Videos","setVideos","get","then","response","data","success","console","log","videos","alert","renderCards","map","video","index","minutes","Math","floor","duration","seconds","position","_id","width","thumbnail","bottom","right","margin","color","backgroundColor","opacity","padding","borderRadius","letterSpacing","fontSize","fontWeight","lineHeight","writer","image","title","name","marginLeft","views","createdAt","format"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { FaCode } from \"react-icons/fa\";\r\nimport { Card, Avatar, Col, Typography, Row } from 'antd';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nconst { Title } = Typography;\r\nconst { Meta } = Card;\r\nfunction LandingPage() {\r\n\r\n    const [Videos, setVideos] = useState([]) //비디오 정보 배열에 저장\r\n\r\n    useEffect(() => { //몽고DB에서 DOM이 로드 되자마자 실행\r\n        axios.get('/api/video/getVideos') //db에서 비디오정보 가져오기 = axios 라이브러리를 사용하여 비동기 GET 요청\r\n            .then(response => {//요청에대한 응답\r\n                if (response.data.success) {  //성공시\r\n                    console.log(response.data.videos)\r\n                    setVideos(response.data.videos) // Videos 상태 변수를 videos 속성 값으로 업데이트\r\n                } else { //실패시\r\n                    alert('비디오 가져오기를 실패했습니다')\r\n                }\r\n            })\r\n    }, []) //[] =  배열을 useEffect의 두 번째 인자로 전달함으로써 DOM실행됬을때 한번만 실행 \r\n\r\n    const renderCards = Videos.map((video, index) => { // map형식으로 \r\n\r\n        var minutes = Math.floor(video.duration / 60); //video.duration(러닝타임)/60 = 분\r\n        var seconds = Math.floor(video.duration - minutes * 60); //minutes/60 = 초\r\n\r\n        return <Col lg={6} md={8} xs={24}> {/* 창크기가 가장클때는 6, 중간일때는 8, 가장작을때는 24 사이즈 (반응형)*/}\r\n            <div style={{ position: 'relative' }}> \r\n                <a href={`/video/${video._id}`} > {/* 클릭시 상세페이지로 넘어가는 링크 */}\r\n                <img style={{ width: '100%' }} alt=\"thumbnail\" src={`http://localhost:5000/${video.thumbnail}`} />{/* 썸네일부분 */}\r\n                <div className=\" duration\" //러닝타임\r\n                    style={{ bottom: 0, right:0, position: 'absolute', margin: '4px', \r\n                    color: '#fff', backgroundColor: 'rgba(17, 17, 17, 0.8)', opacity: 0.8, \r\n                    padding: '2px 4px', borderRadius:'2px', letterSpacing:'0.5px', fontSize:'12px',\r\n                    fontWeight:'500', lineHeight:'12px' }}>\r\n                    <span>{minutes} : {seconds}</span>\r\n                </div>\r\n                </a>\r\n            </div><br />\r\n            <Meta\r\n                avatar={ //유저 이미지\r\n                    <Avatar src={video.writer.image} />\r\n                }\r\n                title={video.title} //비디오 제목\r\n            />\r\n            <span>{video.writer.name} </span><br /> {/* 작성자 이름 */}\r\n            <span style={{ marginLeft: '3rem' }}> {video.views}</span>  {/* 비디오 조회수*/}\r\n            - <span> {moment(video.createdAt).format(\"YYYY.mm.DD\")} </span>{/* 업데이트 날짜 */}\r\n        </Col>\r\n\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <Title level={2} > 추천 동영상 </Title>\r\n            <hr />\r\n\r\n            <Row gutter={16}>\r\n                {renderCards}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n"]},"metadata":{},"sourceType":"module"}